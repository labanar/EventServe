# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master
  
pool: default

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1
  displayName: 'Get NuGet Installer'

- task: NuGetCommand@2
  displayName: 'NuGet Restore'
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  displayName: 'Build'
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Unit Tests'
  inputs:
    command: 'test'
    projects: '**/tests/Unit/**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'EventStore Integration Tests'
  inputs:
    command: 'test'
    projects: '**/tests/Integration/**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Publish EventServe artifact'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**/src/**/EventServe.csproj'
    arguments: '--output $(Build.ArtifactStagingDirectory)/EventServe'
    zipAfterPublish: false
    modifyOutputPath: false

- task: DotNetCoreCLI@2
  displayName: 'Publish EventServe.EventStore artifact'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**/src/**/EventServe.EventStore.csproj'
    arguments: '--output $(Build.ArtifactStagingDirectory)/EventServe.EventStore'
    zipAfterPublish: false
    modifyOutputPath: false

- task: PublishBuildArtifacts@1
  displayName: 'Publish Build Artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'






# - task: DotNetCoreCLI@2
#   displayName: 'NuGet Pack'
#   inputs:
#     command: 'pack'
#     packagesToPack: '**/src/**/*.csproj'
#     versioningScheme: 'off'

# - task: DotNetCoreCLI@2
#   displayName: 'Nuget Push'
#   inputs:
#     command: 'push'
#     packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
#     nuGetFeedType: 'internal'
#     publishVstsFeed: 'c86709e4-239b-4eaf-a5f5-a1673cae1aae'